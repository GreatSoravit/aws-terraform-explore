name: 'Destroy Terraform Environment'

on:
  # This makes the workflow manually triggerable from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to destroy (dev or qa)'
        required: true
        type: choice
        options:
        - dev
        - qa

permissions:
  id-token: write      # Required for OIDC to securely connect to AWS
  contents: read       # Required for the checkout action

jobs:
  terraform-destroy:
    name: 'Terraform Destroy for ${{ github.event.inputs.environment }}'
    runs-on: ubuntu-latest
    
    # Add an environment protection rule for extra safety
    environment: 
      name: destroy-protection

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::656697807925:role/GitHubOIDCRole-aws-terraform-explore
          aws-region: ap-southeast-7

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init
        # Use the environment chosen by the user when they ran the workflow
        working-directory: environment/${{ github.event.inputs.environment }}

      - name: Terraform Destroy
        id: destroy
        run: terraform destroy -auto-approve
        # Use the environment chosen by the user
        working-directory: environment/${{ github.event.inputs.environment }}